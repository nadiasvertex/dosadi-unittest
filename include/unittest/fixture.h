#ifndef __TEST_FIXTURE_H__
#define __TEST_FIXTURE_H__

#include <string>
#include "listener.h"

namespace unittest
{
	/** A fixture is the parent class used by classes generated by the script.
	 * It contains the basic information needed by the suite to setup and run tests. */
	class Fixture
	{
	protected:
		/** The listener receives events during test execution. */
		Listener *listener;
		
		/** The name of the fixture. */
		std::string name;
								
	public:
		Fixture(const std::string &_name):name(_name) {}
		Fixture(const char *_name):name(_name) {}
		~Fixture() {}
		
		virtual const std::string& Name() { return name; }
		
		/** Setup for the fixture. By default does nothing. */
		virtual void setup() {}
		
		/** Teardown for the fixture.  By default does nothing. */
		virtual void teardown() {}
		
		/** Executes all the tests. Filled in by the parser. */
		virtual void runTests() {}				
		
		/** Sets the listener for this fixture. */
		virtual void setListener(Listener *_l) { listener = _l; }		
	};		
}

#endif
